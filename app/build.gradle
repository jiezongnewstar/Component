apply plugin: 'com.android.application'


//声明开发环境字典
def buildEnv = rootProject.ext.buildEnv

//声明依赖字典
def dep = rootProject.ext.dependence

//生产开发环境的URL
def url = rootProject.ext.url

android {
    compileSdkVersion buildEnv.compileSdkVersion
    buildToolsVersion buildEnv.buildToolsVersion
    defaultConfig {
        applicationId buildEnv.applicationId
        minSdkVersion buildEnv.minSdkVersion
        targetSdkVersion buildEnv.targetSdkVersion
        versionCode buildEnv.versionCode
        versionName buildEnv.versionName
        testInstrumentationRunner buildEnv.testInstrumentationRunner

        //开启分包
        multiDexEnabled true

        //svg 配置 5.0以后
        vectorDrawables.useSupportLibrary = true

        //配置string 语言
        resConfigs('zn-rCN')

        //配置so库CPU架构 （真机 arm ，模拟器x86）
//        ndk{
//            abiFilter 'armeabi',"armeabi-v7a"
//        }

        //设置源集属性
        sourceSets {


        }

    }


//    //AdbOptions 可以对adb 操作选项添加配置
//    adbOptions{
//        //配置操作超时时间，单位毫秒
//        timeOutInMs = 5 * 1000_0
//
//        //adb install 命令选项配置
//        installOptions '-r','-s'
//    }

//    //对dx操作的配置，接收一个DexOptions 类型的闭包，配置由DexOptions 提供
//    dexOptions{
//        //配置执行dx 命令是为其分配的最大堆内存
//        javaMaxHeapSize = "4g"
//        //配置是否执行dex Libraries 工程，开启后悔提高增量构建速度，不过会影响clean构建的速度，默认true
//        perDexLibraries = false
//        //配置是否开启jumbo模式，代码方法是超过65535需要强制开启才能构建成攻
//        jumboMode true
//        //配置gradle运行dx命令时使用的线程数量
//        threadCount 8
//        //配置multidex参数
//        additionalParameters = [
//                '--multi-dex',//多dex分包
//                '--set-max-idx-number=50000',//每个包内方法数上限
//                ''
//        ]
//    }


//    //执行lint命令即可运行lint检查，默认生成的报告在outputs/lints-result.html中
//    lintOptions{
//        //遇到lint检查错误会终止构建,一般设置为false
//        abortOnError false
//        //将警告当作错误来处理（老版本：warningAsErrors）
//        warningAsErrors false
//        //检查新API
//        check 'NewApi'
//    }


    signingConfigs{
        debug{

            storeFile file('debugkeystore所在的路径/.android/debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "andrid"
        }

        release{
            storeFile file('app签名的路径/xibei.jks')
            storeType "xibei"
            storePassword "123456"
            keyAlias "xibei"
            keyPassword "123456"
            v2SigningEnabled true

        }
    }


    buildTypes {

        debug{
            signingConfig signingConfigs.debug
            buildConfigField("String","debug","\"${url.debug}\"")
        }

        release {
            signingConfig signingConfigs.release
            buildConfigField("String","release","\"${url.release}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    //第一种添加依赖方法
//    implementation dep.appcompat
//    implementation dep.constraintlayout

    //第二种添加依赖方法
    dep.each {k, v -> implementation v}
}
